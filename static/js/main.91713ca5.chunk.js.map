{"version":3,"sources":["extra/card/card.js","extra/wrapper/wrapper.js","extra/topNavThing/topNavThing.js","App.js","index.js"],"names":["Card","props","onClick","setClicked","id","className","alt","name","src","image","Wrapper","children","Title","correctGuesses","bestScore","clickMessage","App","state","cards","filter","match","console","log","clicked","i","length","setState","shuffle","this","map","key","Component","ReactDOM","render","document","getElementById"],"mappings":"uoCAYeA,G,MATF,SAAAC,GAAK,OAElB,yBAAKC,QAAS,kBAAMD,EAAME,WAAWF,EAAMG,KAAKC,UAAU,iBACtD,yBAAKA,UAAU,iBACd,yBAAKC,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,YCFvBC,G,MAFC,SAAAT,GAAK,OAAI,yBAAKI,UAAU,WAAWJ,EAAMU,YCE1CC,G,MAFD,SAAAX,GAAK,OAAI,wBAAII,UAAU,SAASJ,EAAMU,Y,uBCKhDE,G,MAAiB,GACjBC,EAAY,EACZC,EACF,6EAmGaC,E,2MAhGbC,MAAQ,CACNC,QACAL,iBACAC,YACAC,gB,EAGFZ,WAAa,SAAAC,GAEX,IAAMc,EAAQ,EAAKD,MAAMC,MAAMC,QAAO,SAAAC,GAAK,OAAIA,EAAMhB,KAAOA,KAI5D,GAFAiB,QAAQC,IAAIJ,GAERA,EAAM,GAAGK,QAAS,CACpBF,QAAQC,IAAI,oBAAsBT,GAClCQ,QAAQC,IAAI,eAAiBR,GAE7BD,EAAiB,EACjBE,EAAe,mCAEf,IAAK,IAAIS,EAAI,EAAGA,EAAIN,EAAMO,OAAQD,IAChCN,EAAMM,GAAGD,SAAU,EAGrB,EAAKG,SAAS,CAAEX,iBAChB,EAAKW,SAAS,CAAEb,wBAEX,GAAIA,EAAiB,GAC1BK,EAAM,GAAGK,SAAU,EAEnBV,IAEAE,EAAe,cAEfY,IAAQ,EAAKV,MAAMC,OAEnBG,QAAQC,IAAIJ,GAERL,EAAiBC,IACnBA,EAAYD,EACZ,EAAKa,SAAS,CAAEZ,eAIlB,EAAKY,SAAS,CAAEb,mBAChB,EAAKa,SAAS,CAAEX,qBACX,CACLG,EAAM,GAAGK,SAAU,EAEnBV,EAAiB,EAEjBE,EAAe,yCACfD,EAAY,GACZ,EAAKY,SAAS,CAAEZ,cAEhB,IAAK,IAAIU,EAAI,EAAGA,EAAIN,EAAMO,OAAQD,IAChCN,EAAMM,GAAGD,SAAU,EAMrB,EAAKG,SAAS,CAAEb,mBAChB,EAAKa,SAAS,CAAEX,mB,wEAIV,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,oCAEA,wBAAIV,UAAU,gBAAgBuB,KAAKX,MAAMF,cAEzC,wBAAIV,UAAU,4BAAd,oBACoBuB,KAAKX,MAAMJ,eAC7B,6BAFF,eAGee,KAAKX,MAAMH,WAE1B,yBAAKT,UAAU,aACb,yBAAKA,UAAU,OACZuB,KAAKX,MAAMC,MAAMW,KAAI,SAAAT,GAAK,OACzB,kBAAC,EAAD,CACEjB,WAAY,EAAKA,WACjBC,GAAIgB,EAAMhB,GACV0B,IAAKV,EAAMhB,GACXK,MAAOW,EAAMX,kB,GAvFXsB,aCPlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.91713ca5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.css\";\r\n\r\nconst Card = props => (\r\n\r\n<div onClick={() => props.setClicked(props.id)} className=\"card col-md-3\">\r\n\t\t\t\t<div className=\"img-container\">\r\n\t\t\t\t\t<img alt={props.name} src={props.image} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n);\r\n\r\nexport default Card;","import React from \"react\";\r\nimport \"./wrapper.css\";\r\n\r\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\r\n\r\nexport default Wrapper;","import React from \"react\";\r\nimport \"./topNavThing.css\";\r\n\r\nconst Title = props => <h1 className=\"title\">{props.children}</h1>;\r\n\r\nexport default Title;","import React, { Component } from \"react\";\nimport Card from \"./extra/card/card\";\nimport Wrapper from \"./extra/wrapper/wrapper\";\nimport Title from \"./extra/topNavThing/topNavThing\";\nimport cards from \"./cards.json\";\nimport shuffle from \"shuffle-array\";\nimport \"./App.css\";\n\nlet correctGuesses = 0;\nlet bestScore = 0;\nlet clickMessage =\n  \"Click on a movie to gain points! Click on the same one twice and you lose!\";\n\nclass App extends Component {\n  state = {\n    cards,\n    correctGuesses,\n    bestScore,\n    clickMessage\n  };\n\n  setClicked = id => {\n    // const cards = this.state.cards;\n    const cards = this.state.cards.filter(match => match.id === id);\n    // this.setState({ cards });\n    console.log(cards);\n\n    if (cards[0].clicked) {\n      console.log(\"Correct Guesses: \" + correctGuesses);\n      console.log(\"Best Score: \" + bestScore);\n\n      correctGuesses = 0;\n      clickMessage = \"You already clicked on this one.\";\n\n      for (let i = 0; i < cards.length; i++) {\n        cards[i].clicked = false;\n      }\n\n      this.setState({ clickMessage });\n      this.setState({ correctGuesses });\n      //   this.setState({ cards });\n    } else if (correctGuesses < 11) {\n      cards[0].clicked = true;\n\n      correctGuesses++;\n\n      clickMessage = \"Keep going!\";\n\n      shuffle(this.state.cards);\n\n      console.log(cards);\n\n      if (correctGuesses > bestScore) {\n        bestScore = correctGuesses;\n        this.setState({ bestScore });\n      }\n\n      //   this.setState({ cards });\n      this.setState({ correctGuesses });\n      this.setState({ clickMessage });\n    } else {\n      cards[0].clicked = true;\n\n      correctGuesses = 0;\n\n      clickMessage = \"Now, let's see if you can do it again!\";\n      bestScore = 12;\n      this.setState({ bestScore });\n\n      for (let i = 0; i < cards.length; i++) {\n        cards[i].clicked = false;\n      }\n\n      //   cards = [1, 2, 3, 4, 5];\n\n      //   this.setState({ cards });\n      this.setState({ correctGuesses });\n      this.setState({ clickMessage });\n    }\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <Title>Favourite 80s Guessing Game</Title>\n\n        <h3 className=\"scoreSummary\">{this.state.clickMessage}</h3>\n\n        <h3 className=\"scoreSummary card-header\">\n          Correct Guesses: {this.state.correctGuesses}\n          <br />\n          Best Score: {this.state.bestScore}\n        </h3>\n        <div className=\"container\">\n          <div className=\"row\">\n            {this.state.cards.map(match => (\n              <Card\n                setClicked={this.setClicked}\n                id={match.id}\n                key={match.id}\n                image={match.image}\n              />\n            ))}\n          </div>\n        </div>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}